name: DM fast watcher

on:
  schedule:
    - cron: '*/5 * * * *' # fastest GitHub allows
  workflow_dispatch:
    inputs:
      command:
        description: 'latest | today | recent'
        required: false
        default: 'latest'
        type: choice
        options: [latest, today, recent]
      count:
        description: 'N for recent'
        required: false
        default: '10'
        type: string

permissions:
  contents: read

env:
  TARGET_REPOS: '["SimplifyJobs/Summer2026-Internships","vanshb03/Summer2026-Internships"]'
  WATCH_PATHS: '["listings.json"]'
  LISTINGS_PATH: '.github/scripts/listings.json'
  DATE_FIELD: 'date_posted'
  DATE_FALLBACK: 'date_updated'
  WINDOW_HOURS: '24'
  SEEN_TTL_DAYS: '7'  # DM alerts: shorter TTL for frequent updates
  STATE_DIR: '.state/dm-watcher'  # Separate state directory for DM watcher

jobs:
  watch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: pip install requests

      # Use separate cache for DM watcher state (commit SHAs + TTL cache)
      - name: Restore watcher state
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: .state/dm-watcher
          key: dm-watcher-state-v1

      - name: Validate Telegram env
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          test -n "$TELEGRAM_BOT_TOKEN" && test -n "$TELEGRAM_CHAT_ID"

      # Manual commands to your DM
      - name: run latest
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.command == 'latest' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TARGET_REPO: 'vanshb03/Summer2026-Internships'
          LISTINGS_PATH: ${{ env.LISTINGS_PATH }}
          MESSAGE_PREFIX: 'ðŸ”” DM Alert'
        run: python .github/scripts/send_latest_listing.py

      - name: run today
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.command == 'today' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TARGET_REPO: 'vanshb03/Summer2026-Internships'
          LISTINGS_PATH: ${{ env.LISTINGS_PATH }}
          MESSAGE_PREFIX: 'ðŸ”” DM Alert'
        run: python .github/scripts/send_todays_listings.py

      - name: run recent
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.command == 'recent' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TARGET_REPO: 'vanshb03/Summer2026-Internships'
          LISTINGS_PATH: ${{ env.LISTINGS_PATH }}
          COUNT: ${{ github.event.inputs.count }}
          MESSAGE_PREFIX: 'ðŸ”” DM Alert'
        run: python .github/scripts/send_recent_listings.py

      # Scheduled watcher â†’ DM (only when true additions within WINDOW_HOURS)
      - name: watcher (schedule + manual)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TARGET_REPOS: ${{ env.TARGET_REPOS }}
          WATCH_PATHS: ${{ env.WATCH_PATHS }}
          LISTINGS_PATH: ${{ env.LISTINGS_PATH }}
          DATE_FIELD: ${{ env.DATE_FIELD }}
          DATE_FALLBACK: ${{ env.DATE_FALLBACK }}
          WINDOW_HOURS: ${{ env.WINDOW_HOURS }}
          SEEN_TTL_DAYS: ${{ env.SEEN_TTL_DAYS }}
          STATE_DIR: ${{ env.STATE_DIR }}
        run: python .github/scripts/watch_repo.py

      - name: Save watcher state
        uses: actions/cache/save@v4
        with:
          path: .state/dm-watcher
          key: dm-watcher-state-v1
