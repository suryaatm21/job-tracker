name: Cache cleanup

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "List caches without deleting"
        required: false
        default: "true"
        type: choice
        options: ["true", "false"]
      keep_prefixes:
        description: "Comma-separated prefixes to keep"
        required: false
        default: "dm-watcher-state-v1-2025,channel-digest-state-v1-2025,channel-digest-testing-state-v1-2025"
        type: string

permissions:
  contents: read
  actions: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup gh CLI
        uses: cli/cli@v3
        with:
          version: latest

      - name: Show cache summary (before)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/${{ github.repository }}/actions/caches --paginate \
            | jq -r '.actions_caches[] | "\(.id) | \(.key) | \(.size_in_bytes) bytes | created \(.created_at)"' \
            | head -100

      - name: Delete old caches (respect keep prefixes)
        if: ${{ github.event.inputs.dry_run != 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KEEP: ${{ github.event.inputs.keep_prefixes }}
        run: |
          IFS=',' read -r -a keep <<< "$KEEP"
          gh api repos/${{ github.repository }}/actions/caches --paginate \
            | jq -r '.actions_caches[] | [.id, .key] | @tsv' \
            | while IFS=$'\t' read -r id key; do
                skip=0
                for p in "${keep[@]}"; do
                  if [[ "$key" == "$p"* ]]; then skip=1; break; fi
                done
                if [[ $skip -eq 0 ]]; then
                  echo "Deleting cache id=$id key=$key"
                  gh api -X DELETE repos/${{ github.repository }}/actions/caches/$id || true
                else
                  echo "Keeping cache key=$key"
                fi
              done

      - name: Show cache summary (after)
        if: ${{ github.event.inputs.dry_run != 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/${{ github.repository }}/actions/caches --paginate \
            | jq -r '.actions_caches[] | "\(.id) | \(.key) | \(.size_in_bytes) bytes | created \(.created_at)"' \
            | head -100

